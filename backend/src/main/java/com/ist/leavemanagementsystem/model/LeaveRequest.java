package com.ist.leavemanagementsystem.model;

import jakarta.persistence.*;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDate;
import java.util.Set;

@Entity
@Table(name = "leave_requests")
@Data // Added Lombok
@NoArgsConstructor // Added Lombok
public class LeaveRequest {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @ManyToOne(fetch = FetchType.LAZY) // Use LAZY fetching
    @JoinColumn(name = "user_id", nullable = false) // Map to user_id FK
    private User user;

    @ManyToOne(fetch = FetchType.LAZY) // Use LAZY fetching
    @JoinColumn(name = "leave_type_id", nullable = false) // Map to leave_type_id FK
    private LeaveType leaveType;

    @Column(nullable = false)
    private LocalDate startDate;

    @Column(nullable = false)
    private LocalDate endDate;

    @Column(columnDefinition = "TEXT") // Map to TEXT type
    private String reason;

    @Column(length = 50) // Map to VARCHAR(50)
    private String status; // e.g., "PENDING", "APPROVED", "REJECTED"

    // Relationship to Document model (assuming Document model exists or will be
    // created)
    @OneToMany(mappedBy = "leaveRequest", cascade = CascadeType.ALL, orphanRemoval = true)
    private Set<Document> documents;

    // Getters and setters are generated by @Data
    // NoArgsConstructor is generated by @NoArgsConstructor
}