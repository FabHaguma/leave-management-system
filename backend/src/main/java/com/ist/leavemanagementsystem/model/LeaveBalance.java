package com.ist.leavemanagementsystem.model;

import jakarta.persistence.*; // Ensure necessary JPA imports
import lombok.Data; // Using Lombok for boilerplate code
import lombok.NoArgsConstructor; // Add NoArgsConstructor for JPA

@Entity
@Table(name = "leave_balances") // Specify the table name
@Data // Using Lombok for getters, setters, toString, equals, hashCode
@NoArgsConstructor // Add a no-args constructor required by JPA
public class LeaveBalance {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Use IDENTITY for auto-incrementing IDs
    private Long id;

    @ManyToOne(fetch = FetchType.LAZY) // Use LAZY fetching for performance
    @JoinColumn(name = "user_id", nullable = false) // Map to the user_id foreign key column
    private User user;

    // Added based on FirstPick: Link to LeaveType
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "leave_type_id", nullable = false) // Map to the leave_type_id foreign key column
    private LeaveType leaveType;

    // Changed field name and type based on FirstPick
    @Column(nullable = false, columnDefinition = "DOUBLE PRECISION default 0.0")
    private double entitlement = 0.0;

    // Changed field name and type based on FirstPick
    @Column(nullable = false, columnDefinition = "DOUBLE PRECISION default 0.0")
    private double used = 0.0;

    // Added based on FirstPick
    @Column(nullable = false, columnDefinition = "DOUBLE PRECISION default 0.0")
    private double remaining = 0.0;

    // Added constructor based on FirstPick for easier creation
    public LeaveBalance(User user, LeaveType leaveType, double entitlement) {
        this.user = user;
        this.leaveType = leaveType;
        this.entitlement = entitlement;
        this.remaining = entitlement; // Initially remaining equals entitlement
        this.used = 0.0;
    }

    // Note: Getters, Setters, equals, hashCode, and toString are generated by
    // Lombok's @Data
    // Note: A no-args constructor is generated by Lombok's @NoArgsConstructor
}