spring.application.name=leavemanagementsystem

# ==============================
# Server Configuration
# ==============================
server.port=8080

# ==============================
# PostgreSQL Database Configuration
# ==============================
# URL matches the one in docker-compose environment
spring.datasource.url=jdbc:postgresql://postgres:5432/leavemanagement
# Credentials match the ones in docker-compose environment
spring.datasource.username=leaveuser
spring.datasource.password=leavepassword
# PostgreSQL driver class name (Often optional if driver JAR is present)
 spring.datasource.driver-class-name=org.postgresql.Driver

# ==============================
# JPA & Hibernate
# ==============================
# Tells Hibernate to validate the schema against entities, but not change it.
# Flyway is responsible for schema changes.
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true

# Updated Hibernate dialect for PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# ==============================
# Timezone Fix (optional but recommended)
# ==============================
# Check if needed/compatible with PostgreSQL config
 spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# ==============================
# Flyway Configuration
# ==============================
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
# Optional: Explicitly set Flyway user/password if needed (often inferred from datasource)
 spring.flyway.user=leaveuser
 spring.flyway.password=leavepassword

management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always



spring.security.oauth2.client.registration.azure.client-id=YOUR_CLIENT_ID
spring.security.oauth2.client.registration.azure.client-secret=YOUR_CLIENT_SECRET
spring.security.oauth2.client.registration.azure.tenant-id=YOUR_TENANT_ID
spring.security.oauth2.client.registration.azure.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.azure.scope=openid,profile,email

spring.security.oauth2.client.provider.azure.authorization-uri=https://login.microsoftonline.com/${spring.security.oauth2.client.registration.azure.tenant-id}/oauth2/v2.0/authorize
spring.security.oauth2.client.provider.azure.token-uri=https://login.microsoftonline.com/${spring.security.oauth2.client.registration.azure.tenant-id}/oauth2/v2.0/token
spring.security.oauth2.client.provider.azure.user-info-uri=https://graph.microsoft.com/oidc/userinfo
spring.security.oauth2.client.provider.azure.user-name-attribute=name

spring.security.oauth2.client.registration.azure.redirect-uri={baseUrl}/login/oauth2/code/azure



